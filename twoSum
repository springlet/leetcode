给定一个整数数组和一个目标值，找出数组中和为目标值的两个数。

你可以假设每个输入只对应一种答案，且同样的元素不能被重复利用。

示例:

给定 nums = [2, 7, 11, 15], target = 9

因为 nums[0] + nums[1] = 2 + 7 = 9
所以返回 [0, 1]

解法1：先遍历一遍数组，建立map数据，然后再遍历一遍，开始查找，找到则记录index

public static int[] twoSum(int[] nums, int target) {
          int[] res = new int[2];
          if (nums.length <= 1) {
              return res;
          }
          Map<Integer, Integer> m = new HashMap<>();
          for (int i = 0; i < nums.length; i++) {
              m.put(nums[i], i);
          }
          for (int i = 0; i < nums.length; i++) {
              int t = target - nums[i];
              if (m.containsKey(t) && m.get(t) != i) {
                  res[0] = i;
                  res[1] = m.get(t);
                  break;
              }
          }
          return res;
     }
